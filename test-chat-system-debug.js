#!/usr/bin/env node

/**
 * Test Chat System Debug - Testuje zobrazov√°n√≠ syst√©mov√Ωch zpr√°v
 */

// Simulace prohl√≠≈æeƒçov√©ho prost≈ôed√≠ pro testov√°n√≠
const jsdom = require('jsdom');
const fs = require('fs');
const path = require('path');

// Z√°kladn√≠ setup pro JSDOM
const { JSDOM } = jsdom;

// Naƒçten√≠ HTML obsahu
const indexPath = path.join(__dirname, 'index.html');
const indexHTML = fs.readFileSync(indexPath, 'utf-8');

// Vytvo≈ôen√≠ JSDOM instance
const dom = new JSDOM(indexHTML, {
    runScripts: "dangerously",
    resources: "usable",
    url: "http://localhost/"
});

// Simulace konzole a z√°kladn√≠ch prohl√≠≈æeƒçov√Ωch objekt≈Ø
global.window = dom.window;
global.document = dom.window.document;
global.console = console;

// Test syst√©mov√Ωch zpr√°v v chatu
async function testChatSystemMessages() {
    console.log('üîç TESTOV√ÅN√ç CHAT SYST√âMU - SYST√âMOV√â ZPR√ÅVY');
    console.log('‚ïê'.repeat(60));
    
    try {
        // Simulace importu modul≈Ø (p≈ôes eval pro testov√°n√≠)
        console.log('üìù Test 1: Simulace p≈ôid√°n√≠ syst√©mov√© zpr√°vy');
        
        const testMessage = {
            id: Date.now(),
            sender: 'Syst√©m',
            content: 'Testovac√≠ syst√©mov√° zpr√°va',
            color: '#FF00FF'
        };
        
        console.log('‚úÖ Vytvo≈ôena zpr√°va:', testMessage);
        
        // Test rozpozn√°n√≠ typu zpr√°vy
        const isSystemMessage = testMessage.sender === 'Syst√©m';
        console.log('üìä Rozpozn√°n√≠ syst√©mov√© zpr√°vy:', isSystemMessage ? '‚úÖ ANO' : '‚ùå NE');
        
        // Test CSS t≈ô√≠d
        let messageClasses = 'chat-message mb-0 pt-1 pb-0 px-2 rounded bg-black overflow-hidden w-100';
        if (isSystemMessage) {
            messageClasses += ' chat-message-system';
        }
        
        console.log('üé® CSS t≈ô√≠dy:', messageClasses);
        
        // Test vytvo≈ôen√≠ HTML elementu
        const messageHTML = `
            <div class="${messageClasses} fs-6">
                <strong>${testMessage.sender}:</strong> ${testMessage.content}
            </div>
        `;
        
        console.log('üìÑ Generovan√© HTML:');
        console.log(messageHTML);
        
        console.log('‚ïê'.repeat(60));
        console.log('üéâ CHAT SYST√âM TEST DOKONƒåEN');
        console.log('‚úÖ Syst√©mov√© zpr√°vy by se mƒõly zobrazovat spr√°vnƒõ');
        
        return true;
        
    } catch (error) {
        console.error('‚ùå CHYBA V TESTU CHAT SYST√âMU:', error);
        return false;
    }
}

// Spu≈°tƒõn√≠ testu
if (require.main === module) {
    testChatSystemMessages()
        .then(result => {
            if (result) {
                console.log('\nüéØ V√ùSLEDEK: Chat syst√©m funguje spr√°vnƒõ');
                process.exit(0);
            } else {
                console.log('\n‚ùå V√ùSLEDEK: Chyba v chat syst√©mu');
                process.exit(1);
            }
        })
        .catch(error => {
            console.error('üí• KRITICK√Å CHYBA:', error);
            process.exit(1);
        });
}

module.exports = { testChatSystemMessages };
