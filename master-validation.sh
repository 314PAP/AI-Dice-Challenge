#!/bin/bash

# üé≤ AI DICE CHALLENGE - MASTER VALIDATION SYSTEM
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# Sjednocen√Ω test syst√©m - spou≈°t√≠ v≈°echny kontroly po ka≈æd√©m z√°pisu
# Rychl√© validace + kompletn√≠ testy + live monitoring
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

set -e  # Zastav√≠ p≈ôi chybƒõ

# üé® BAREVN√â V√ùSTUPY
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# üìä STATISTIKY
TOTAL_CHECKS=0
PASSED_CHECKS=0
FAILED_CHECKS=0
WARNINGS=0

# üîß HELPER FUNKCE
print_header() {
    echo -e "\n${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${WHITE}$1${NC}"
    echo -e "${CYAN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

print_step() {
    echo -e "\n${BLUE}$1${NC}"
    echo -e "${BLUE}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
}

check_result() {
    TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
        PASSED_CHECKS=$((PASSED_CHECKS + 1))
    else
        echo -e "${RED}‚ùå $2${NC}"
        FAILED_CHECKS=$((FAILED_CHECKS + 1))
    fi
}

warning_result() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
    WARNINGS=$((WARNINGS + 1))
}

# üöÄ ZAƒå√ÅTEK MASTER VALIDACE
print_header "üé≤ AI DICE CHALLENGE - MASTER VALIDATION"
echo -e "${WHITE}Datum:${NC} $(date)"
echo -e "${WHITE}Commit:${NC} $(git rev-parse --short HEAD 2>/dev/null || echo 'N/A')"
echo -e "${WHITE}Branch:${NC} $(git branch --show-current 2>/dev/null || echo 'N/A')"

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üîç F√ÅZE 1: QUICK VALIDATION (rychl√© kontroly)
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_step "üîç F√ÅZE 1: RYCHL√â KONTROLY"

# Kontrola z√°kladn√≠ch soubor≈Ø
echo "üìÅ Kontroluji existenci kl√≠ƒçov√Ωch soubor≈Ø..."
for file in "package.json" "index.html" "src/js/main.js" "src/styles/main.css"; do
    if [ -f "$file" ]; then
        check_result 0 "Soubor $file existuje"
    else
        check_result 1 "Soubor $file chyb√≠"
    fi
done

# Git stav
echo -e "\nüìã Git stav:"
UNCOMMITTED=$(git status --porcelain | wc -l)
if [ $UNCOMMITTED -gt 0 ]; then
    warning_result "M√°te $UNCOMMITTED necommitovan√Ωch zmƒõn"
    git status --short
else
    check_result 0 "Git workspace je ƒçist√Ω"
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üé® F√ÅZE 2: CSS & STYLE VALIDATION
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_step "üé® F√ÅZE 2: CSS & STYLE VALIDACE"

# Spu≈°tƒõn√≠ CSS validace
echo "üîç Spou≈°t√≠m CSS validaci..."
if ./css-validation.sh > /tmp/css-validation.log 2>&1; then
    check_result 0 "CSS validace pro≈°la"
else
    check_result 1 "CSS validace selhala"
    echo -e "${RED}Posledn√≠ ≈ô√°dky z CSS validace:${NC}"
    tail -10 /tmp/css-validation.log
fi

# Smart CSS validace pro zmƒõny
echo -e "\nüß† Spou≈°t√≠m smart CSS validaci..."
if ./smart-css-validation.sh > /tmp/smart-css-validation.log 2>&1; then
    check_result 0 "Smart CSS validace pro≈°la"
else
    check_result 1 "Smart CSS validace selhala"
    echo -e "${RED}Posledn√≠ ≈ô√°dky ze smart validace:${NC}"
    tail -10 /tmp/smart-css-validation.log
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üß™ F√ÅZE 3: FUNKƒåN√ç TESTY
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_step "üß™ F√ÅZE 3: FUNKƒåN√ç TESTY"

# Test hern√≠ logiky
if [ -f "test-farkle-comprehensive.js" ]; then
    echo "üé≤ Testuji hern√≠ logiku..."
    if timeout 30s node test-farkle-comprehensive.js > /tmp/game-logic.log 2>&1; then
        check_result 0 "Hern√≠ logika funguje"
    else
        check_result 1 "Hern√≠ logika selhala"
        echo -e "${RED}Posledn√≠ ≈ô√°dky z test≈Ø logiky:${NC}"
        tail -5 /tmp/game-logic.log
    fi
else
    warning_result "Test hern√≠ logiky nenalezen"
fi

# Test real game simulace
if [ -f "test-real-game-simulation.js" ]; then
    echo "üéÆ Testuji real game simulaci..."
    if timeout 30s node test-real-game-simulation.js > /tmp/real-game.log 2>&1; then
        check_result 0 "Real game simulace funguje"
    else
        check_result 1 "Real game simulace selhala"
        echo -e "${RED}Posledn√≠ ≈ô√°dky z real game test≈Ø:${NC}"
        tail -5 /tmp/real-game.log
    fi
else
    warning_result "Test real game simulace nenalezen"
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üèóÔ∏è F√ÅZE 4: BUILD & DEPLOYMENT CHECK
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_step "üèóÔ∏è F√ÅZE 4: BUILD & DEPLOYMENT"

# Vite build test
echo "üì¶ Testuji Vite build..."
if timeout 60s npm run build > /tmp/build.log 2>&1; then
    check_result 0 "Vite build √∫spƒõ≈°n√Ω"
    
    # Kontrola velikosti bundle
    if [ -d "dist" ]; then
        BUNDLE_SIZE=$(du -sh dist | cut -f1)
        echo -e "${GREEN}üìä Bundle velikost: $BUNDLE_SIZE${NC}"
        
        # Kontrola, ≈æe kritick√© soubory existuj√≠
        for file in "dist/index.html" "dist/assets"/*.js "dist/assets"/*.css; do
            if ls $file 1> /dev/null 2>&1; then
                check_result 0 "Build obsahuje $(basename $file)"
            else
                check_result 1 "Build neobsahuje $(basename $file)"
            fi
        done
    fi
else
    check_result 1 "Vite build selhal"
    echo -e "${RED}Posledn√≠ ≈ô√°dky z build logu:${NC}"
    tail -10 /tmp/build.log
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üîê F√ÅZE 5: SECURITY & PERFORMANCE
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_step "üîê F√ÅZE 5: SECURITY & PERFORMANCE"

# NPM audit
echo "üîí Spou≈°t√≠m npm audit..."
if npm audit --audit-level moderate > /tmp/audit.log 2>&1; then
    check_result 0 "Npm audit bez kritick√Ωch probl√©m≈Ø"
else
    check_result 1 "Npm audit na≈°el probl√©my"
    echo -e "${RED}Npm audit v√Ωsledky:${NC}"
    tail -5 /tmp/audit.log
fi

# Kontrola velikosti JS soubor≈Ø
echo -e "\nüìä Kontroluji velikost JS soubor≈Ø..."
JS_FILES=$(find src -name "*.js" -type f)
TOTAL_JS_LINES=0

for file in $JS_FILES; do
    LINES=$(wc -l < "$file")
    TOTAL_JS_LINES=$((TOTAL_JS_LINES + LINES))
    if [ $LINES -gt 500 ]; then
        warning_result "Soubor $file m√° $LINES ≈ô√°dk≈Ø (mo≈æn√° moc velk√Ω)"
    fi
done

if [ $TOTAL_JS_LINES -lt 8000 ]; then
    check_result 0 "Celkov√° velikost JS: $TOTAL_JS_LINES ≈ô√°dk≈Ø (v normƒõ)"
else
    check_result 1 "Celkov√° velikost JS: $TOTAL_JS_LINES ≈ô√°dk≈Ø (p≈ô√≠li≈° velk√©)"
fi

# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# üìä FIN√ÅLN√ç REPORT
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

print_header "üìä FIN√ÅLN√ç REPORT"

echo -e "${WHITE}üìà STATISTIKY:${NC}"
echo -e "  ${GREEN}‚úÖ √öspƒõ≈°n√©: $PASSED_CHECKS${NC}"
echo -e "  ${RED}‚ùå Ne√∫spƒõ≈°n√©: $FAILED_CHECKS${NC}"
echo -e "  ${YELLOW}‚ö†Ô∏è  Varov√°n√≠: $WARNINGS${NC}"
echo -e "  ${BLUE}üìä Celkem: $TOTAL_CHECKS test≈Ø${NC}"

# V√Ωpoƒçet √∫spƒõ≈°nosti
if [ $TOTAL_CHECKS -gt 0 ]; then
    SUCCESS_RATE=$(( (PASSED_CHECKS * 100) / TOTAL_CHECKS ))
    echo -e "  ${PURPLE}üéØ √öspƒõ≈°nost: $SUCCESS_RATE%${NC}"
else
    SUCCESS_RATE=0
fi

echo ""

# Fin√°ln√≠ rozhodnut√≠
if [ $FAILED_CHECKS -eq 0 ]; then
    if [ $WARNINGS -eq 0 ]; then
        echo -e "${GREEN}üéâ PERFEKTN√ç! V≈°echny testy pro≈°ly bez varov√°n√≠!${NC}"
        echo -e "${GREEN}üöÄ Commit m≈Ø≈æe pokraƒçovat${NC}"
        exit 0
    else
        echo -e "${YELLOW}‚úÖ Testy pro≈°ly, ale jsou varov√°n√≠${NC}"
        echo -e "${YELLOW}‚ö†Ô∏è  Doporuƒçuji zkontrolovat varov√°n√≠ p≈ôed commitem${NC}"
        exit 0
    fi
else
    echo -e "${RED}‚ùå FAIL! $FAILED_CHECKS test≈Ø selhalo${NC}"
    echo -e "${RED}üõë Commit by nemƒõl pokraƒçovat${NC}"
    
    # N√°vody na opravu
    echo -e "\n${CYAN}üîß N√ÅVODY NA OPRAVU:${NC}"
    echo -e "${WHITE}‚Ä¢ CSS probl√©my:${NC} zkontroluj src/styles/ a dodr≈æuj Bootstrap pravidla"
    echo -e "${WHITE}‚Ä¢ JS probl√©my:${NC} zkontroluj src/js/ a logiku"
    echo -e "${WHITE}‚Ä¢ Build probl√©my:${NC} npm run dev a zkontroluj console"
    echo -e "${WHITE}‚Ä¢ Security:${NC} npm audit fix"
    
    exit 1
fi
