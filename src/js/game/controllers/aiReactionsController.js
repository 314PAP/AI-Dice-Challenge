/**
 * AI Reactions Controller
 * Manages AI reactions, trash talk, banter, and dynamic game responses
 */

import { gameState } from '../gameState.js';
import { enhancedAI } from '../../../ai/controllers/enhancedAIController.js';

/**
 * Spust√≠ AI reakce po dobr√©m hodu
 */
export function triggerAIAfterGoodRoll(score, _playerName) {
    if (Math.random() < 0.3) { // 30% ≈°ance
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const reactions = {
            gemini: [
                `Statisticky m√°≈° jen ${Math.round(Math.random() * 40 + 20)}% ≈°anci na v√Ωhru üìä`,
                `${score} bod≈Ø? M≈Øj algoritmus oƒçek√°val v√≠c ü§ñ`,
                'Data ukazuj√≠ vzestupn√Ω trend... zat√≠m üìà'
            ],
            chatgpt: [
                'Nice roll! But I\'m still gonna crush you! üòéüé≤',
                `${score} bod≈Ø? Not bad, not bad! üí™`,
                'Okay, that was actually pretty good! üëè‚ú®'
            ],
            claude: [
                'V√Ωborn√Ω tah! Strategie se ti vyv√≠j√≠ üéØ',
                `${score} bod≈Ø... moudr√© rozhodnut√≠ üßò`,
                'Tak se mi to l√≠b√≠! Pokraƒçuj v t√©to cestƒõ üåü'
            ]
        };
        
        const response = reactions[selectedAI][Math.floor(Math.random() * reactions[selectedAI].length)];
        setTimeout(() => window.addChatMessage(selectedAI, response), 500 + Math.random() * 1000);
    }
}

/**
 * Spust√≠ AI hecov√°n√≠ po ≈°patn√©m hodu
 */
export function triggerAIAfterBadRoll(score, _playerName) {
    if (Math.random() < 0.4) { // 40% ≈°ance
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const reactions = {
            gemini: [
                `${score} bod≈Ø? Error: Expected value too low üìâ`,
                'V√Ωpoƒçet rizika selhal. Recalibrating... ü§ñ',
                'Suboptim√°ln√≠ v√Ωsledek podle predikc√≠ üìä'
            ],
            chatgpt: [
                'Ouch! That hurt to watch! üòÖüé≤',
                `${score} bod≈Ø? Maybe buy some luck online! üõí‚ú®`,
                'Kostky tƒõ fakt nemaj√≠ r√°dy, co? ü§£'
            ],
            claude: [
                `${score} bod≈Ø... nƒõkdy je ≈°tƒõst√≠ promƒõnliv√© ü§î`,
                'Moudrost ≈ô√≠k√°: i z ne√∫spƒõchu se uƒç√≠me üìö',
                'Takov√© jsou kostky ≈æivota... üé≠'
            ]
        };
        
        const response = reactions[selectedAI][Math.floor(Math.random() * reactions[selectedAI].length)];
        setTimeout(() => window.addChatMessage(selectedAI, response), 300 + Math.random() * 800);
    }
}

/**
 * Spust√≠ AI hecov√°n√≠ po farkle
 */
export function triggerFarkleHeckling(_playerName) {
    if (Math.random() < 0.7) { // 70% ≈°ance na hecov√°n√≠ po farkle
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const farkleReactions = {
            gemini: [
                'FARKLE! Probability of this: 2.31% üìâ‚ùå',
                'Statistika ne√∫prosn√°: FARKLE detected! ü§ñüí•',
                'Error 404: Boduj√≠c√≠ kostky not found! üîç‚ùå'
            ],
            chatgpt: [
                'OOOOOF! That\'s a big fat FARKLE! üí•üòÇ',
                'Farkle! The dice are roasting you hard! üî•üé≤',
                'HAHA! That was painful to watch! üòÖ‚ùå'
            ],
            claude: [
                'Ach, farkle... osud je nevyzpytateln√Ω üé≠‚ùå',
                'Takov√Ω je ≈æivot kostka≈ôe... üåôüí´',
                'I to je ƒç√°st cesty k moudrosti üìö‚ú®'
            ]
        };
        
        const reactions = farkleReactions[selectedAI];
        const response = reactions[Math.floor(Math.random() * reactions.length)];
        setTimeout(() => window.addChatMessage(selectedAI, response), 800 + Math.random() * 1200);
    }
}

/**
 * N√°hodn√Ω AI trash talk
 */
export function triggerRandomAITrashTalk() {
    if (Math.random() < 0.15) { // 15% ≈°ance
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const reaction = enhancedAI.generateTrashTalk(selectedAI, 'human');
        if (reaction) {
            setTimeout(() => window.addChatMessage(selectedAI, reaction), 1500 + Math.random() * 2000);
        }
    }
}

/**
 * AI banter mezi sebou
 */
export function triggerAIBanter() {
    if (Math.random() < 0.2) { // 20% ≈°ance
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const initiator = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const banter = enhancedAI.generateAIBanter(initiator);
        if (banter) {
            setTimeout(() => window.addChatMessage('system', banter), 2000 + Math.random() * 3000);
        }
    }
}

/**
 * Koment√°≈ôe p≈ôi vysok√©m napƒõt√≠
 */
export function triggerAIHighTensionComment() {
    // Naj√≠t hr√°ƒçe bl√≠zko c√≠li
    const closeToWin = gameState.players.some(player => 
        player.score >= gameState.targetScore * 0.8
    );
    
    if (closeToWin && Math.random() < 0.6) { // 60% ≈°ance p≈ôi vysok√©m napƒõt√≠
        const aiTypes = ['gemini', 'chatgpt', 'claude'];
        const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
        
        const tensionComments = {
            gemini: [
                'Napƒõt√≠ roste exponenci√°lnƒõ! üìà‚ö°',
                'Critical phase detected! All systems alert! üö®',
                'Statistical variance approaching maximum! üìäüî•'
            ],
            chatgpt: [
                'Whoa! Things are getting spicy! üå∂Ô∏èüî•',
                'Plot twist incoming! üé¨‚ú®',
                'This is where legends are made! üèÜ‚ö°'
            ],
            claude: [
                'Napƒõt√≠ hustne... moment pravdy se bl√≠≈æ√≠ üé≠',
                'Ve vzduchu je c√≠tit osud... üåô‚ö°',
                'Takov√© chv√≠le definuj√≠ charaktery üíé'
            ]
        };
        
        const comments = tensionComments[selectedAI];
        const response = comments[Math.floor(Math.random() * comments.length)];
        
        setTimeout(() => window.addChatMessage(selectedAI, response), 800 + Math.random() * 1200);
    }
}

/**
 * Dynamick√© AI koment√°≈ôe podle hern√≠ situace
 */
export function triggerSituationalComment(situation, data = {}) {
    const aiTypes = ['gemini', 'chatgpt', 'claude'];
    const selectedAI = aiTypes[Math.floor(Math.random() * aiTypes.length)];
    
    let response = '';
    
    switch (situation) {
        case 'highScore': {
            const highScoreComments = {
                gemini: [`Impressive roll! Probability analysis shows ${data.score} points! üìäüéØ`],
                chatgpt: [`WHOA! ${data.score} points? That's some serious dice magic! ‚ú®üé≤`],
                claude: [`${data.score} bod≈Ø... to je v√Ωjimeƒçn√Ω v√Ωkon üåü`]
            };
            response = highScoreComments[selectedAI][0];
            break;
        }
        case 'comeback': {
            const comebackComments = {
                gemini: [`Comeback probability increasing: ${Math.round(Math.random() * 30 + 40)}% üìà`],
                chatgpt: ['Plot twist! Someone\'s making a COMEBACK! üé¨üî•'],
                claude: ['Osud se ot√°ƒç√≠... comeback je mo≈æn√Ω üîÑ‚≠ê']
            };
            response = comebackComments[selectedAI][0];
            break;
        }
        case 'closeGame': {
            const closeGameComments = {
                gemini: [`Game proximity alert! Margin: ${data.margin} points! üö®`],
                chatgpt: [`This is TIGHT! Only ${data.margin} points apart! üò±‚ö°`],
                claude: [`Rozd√≠l pouh√Ωch ${data.margin} bod≈Ø... napƒõt√≠ vrchol√≠ üé≠`]
            };
            response = closeGameComments[selectedAI][0];
            break;
        }
    }
    
    if (response) {
        setTimeout(() => window.addChatMessage(selectedAI, response), 500 + Math.random() * 1000);
    }
}

// Export v≈°ech funkc√≠ pro glob√°ln√≠ p≈ô√≠stup
window.triggerAIAfterGoodRoll = triggerAIAfterGoodRoll;
window.triggerAIAfterBadRoll = triggerAIAfterBadRoll;
window.triggerFarkleHeckling = triggerFarkleHeckling;
window.triggerRandomAITrashTalk = triggerRandomAITrashTalk;
window.triggerAIBanter = triggerAIBanter;
window.triggerAIHighTensionComment = triggerAIHighTensionComment;
window.triggerSituationalComment = triggerSituationalComment;
