/**
 * Game Screens - Obrazovky pro hern√≠ m√≥dy
 * P≈ôesunuto z gameUI.js pro zmen≈°en√≠ velikosti
 */

import { createNeonButton, createNeonCard } from './uiComponents.js';
import gameState from '../game/gameState.js';

export class GameScreens {
    /**
     * Vytvo≈ô√≠ obrazovku pravidel
     */
    static createRulesScreen(callbacks) {
        const container = document.createElement('div');
        container.className = 'h-100 d-flex flex-column p-3';
        
        const header = document.createElement('div');
        header.className = 'text-center mb-3';
        header.innerHTML = '<h2 class="text-neon-blue mb-0"><i class="bi bi-book-fill me-2"></i>PRAVIDLA HRY</h2>';
        
        const content = document.createElement('div');
        content.className = 'flex-grow-1 overflow-auto text-neon-green';
        content.innerHTML = `
            <div class="mb-3">
                <h4 class="text-neon-yellow">üéØ C√çL HRY</h4>
                <p>Dos√°hnƒõte jako prvn√≠ hr√°ƒç c√≠lov√©ho sk√≥re (v√Ωchoz√≠ 5000 bod≈Ø).</p>
            </div>
            <div class="mb-3">
                <h4 class="text-neon-yellow">üé≤ Z√ÅKLADN√ç HRAN√ç</h4>
                <ul>
                    <li>H√°z√≠te 6 kostkami</li>
                    <li>Vyb√≠r√°te boduj√≠c√≠ kostky a odlo≈æ√≠te je</li>
                    <li>M≈Ø≈æete pokraƒçovat nebo ukonƒçit tah</li>
                    <li>Prvn√≠ z√°pis: minim√°lnƒõ 300 bod≈Ø</li>
                </ul>
            </div>
            <div class="mb-3">
                <h4 class="text-neon-yellow">üíé BODOV√ÅN√ç</h4>
                <ul>
                    <li><strong>1</strong> = 100 bod≈Ø</li>
                    <li><strong>5</strong> = 50 bod≈Ø</li>
                    <li><strong>T≈ôi stejn√©:</strong> hodnota √ó 100 (t≈ôi 1 = 1000)</li>
                    <li><strong>ƒåty≈ôi stejn√©:</strong> √ó 2</li>
                    <li><strong>Pƒõt stejn√Ωch:</strong> √ó 4</li>
                    <li><strong>≈†est stejn√Ωch:</strong> √ó 8</li>
                </ul>
            </div>
            <div class="mb-3">
                <h4 class="text-neon-orange">üî• HOT DICE</h4>
                <p>Pokud odlo≈æ√≠te v≈°ech 6 kostek, z√≠sk√°v√°te je zpƒõt a m≈Ø≈æete pokraƒçovat!</p>
            </div>
            <div class="mb-3">
                <h4 class="text-neon-red">üí• FARKLE</h4>
                <p>Nehod√≠te-li ≈æ√°dn√© boduj√≠c√≠ kostky, p≈ôich√°z√≠te o v≈°echny body v tahu!</p>
            </div>
        `;
        
        const buttonContainer = document.createElement('div');
        buttonContainer.className = 'text-center mt-3';
        
        const backBtn = createNeonButton('ZPƒöT DO MENU', 'orange', 'bi-arrow-left-circle-fill', 
            callbacks.showMainMenu, 'btn w-100');
        buttonContainer.appendChild(backBtn);
        
        container.appendChild(header);
        container.appendChild(content);
        container.appendChild(buttonContainer);
        
        return container;
    }

    /**
     * Vytvo≈ô√≠ obrazovku s√≠nƒõ sl√°vy
     */
    static createHallOfFameScreen(callbacks) {
        const container = document.createElement('div');
        container.className = 'h-100 d-flex flex-column p-3';
        
        const header = document.createElement('div');
        header.className = 'text-center mb-3';
        header.innerHTML = '<h2 class="text-neon-purple mb-0"><i class="bi bi-trophy-fill me-2"></i>S√ç≈á SL√ÅVY</h2>';
        
        const content = document.createElement('div');
        content.className = 'flex-grow-1 overflow-auto text-center text-neon-yellow';
        content.innerHTML = `
            <div class="py-5">
                <i class="bi bi-trophy display-1 text-neon-yellow mb-3"></i>
                <h3>Zat√≠m ≈æ√°dn√≠ v√≠tƒõzov√©</h3>
                <p class="text-neon-green">Buƒète prvn√≠, kdo dokonƒç√≠ hru!</p>
            </div>
        `;
        
        const buttonContainer = document.createElement('div');
        buttonContainer.className = 'text-center mt-3';
        
        const backBtn = createNeonButton('ZPƒöT DO MENU', 'orange', 'bi-arrow-left-circle-fill', 
            callbacks.showMainMenu, 'btn w-100');
        buttonContainer.appendChild(backBtn);
        
        container.appendChild(header);
        container.appendChild(content);
        container.appendChild(buttonContainer);
        
        return container;
    }

    /**
     * Vytvo≈ô√≠ obrazovku konce hry
     */
    static createGameEndScreen(winner, callbacks) {
        const container = document.createElement('div');
        container.className = 'h-100 d-flex flex-column justify-content-center align-items-center p-3 text-center';
        
        container.innerHTML = `
            <div class="mb-4">
                <i class="bi bi-trophy-fill display-1 text-neon-yellow"></i>
                <h1 class="text-neon-green mt-3">V√çTƒöZ!</h1>
                <h2 class="text-neon-blue">${winner.name}</h2>
                <p class="text-neon-purple fs-4">Sk√≥re: ${winner.score.toLocaleString()}</p>
            </div>
        `;
        
        const btnGroup = document.createElement('div');
        btnGroup.className = 'd-flex gap-3 flex-wrap justify-content-center';
        
        const newGameBtn = createNeonButton(
            'NOV√Å HRA', 
            'green', 
            'bi-arrow-clockwise', 
            callbacks.startNewGame,
            'btn px-4'
        );
        
        const menuBtn = createNeonButton(
            'MENU', 
            'blue', 
            'bi-house-fill', 
            callbacks.showMainMenu,
            'btn px-4'
        );
        
        btnGroup.appendChild(newGameBtn);
        btnGroup.appendChild(menuBtn);
        container.appendChild(btnGroup);
        
        return container;
    }

    /**
     * Zobraz√≠ pravidla
     */
    showRules() {
        gameState.updateState({ gamePhase: 'rules' });
    }

    /**
     * Zobraz√≠ s√≠≈à sl√°vy  
     */
    showHallOfFame() {
        gameState.updateState({ gamePhase: 'halloffame' });
    }

    /**
     * Vykresl√≠ pravidla
     */
    renderRules(gameArea) {
        const container = document.createElement('div');
        container.className = 'd-flex flex-column h-100 overflow-hidden p-1';
        
        const title = document.createElement('h1');
        title.className = 'text-neon-blue fs-fluid-1 mb-2 text-center';
        title.innerHTML = '<i class="bi bi-book-half"></i> Pravidla';
        container.appendChild(title);
        
        const rulesCard = createNeonCard('Pravidla kostkovky', 'blue', `
            <div class="mb-3">
                <h4 class="text-neon-blue h5 mb-2">C√≠l hry</h4>
                <p class="text-neon-green mb-0">Dos√°hnout prvn√≠ho c√≠lov√©ho sk√≥re.</p>
            </div>
            <div class="mb-0">
                <h4 class="text-neon-blue h5 mb-2">Bodov√°n√≠</h4>
                <p class="text-neon-green mb-0">Jedniƒçka = 100, Pƒõtka = 50, T≈ôi stejn√© = n√°sobky</p>
            </div>
        `);
        
        container.appendChild(rulesCard);
        
        const backBtn = createNeonButton('ZPƒöT', 'orange', 'bi-arrow-left', 
            () => gameState.updateState({ gamePhase: 'menu' }));
        container.appendChild(backBtn);
        
        if (gameArea) {
            gameArea.innerHTML = '';
            gameArea.appendChild(container);
        }
    }

    /**
     * Vykresl√≠ s√≠≈à sl√°vy
     */
    renderHallOfFame(gameArea) {
        const container = document.createElement('div');
        container.className = 'd-flex flex-column h-100 p-1';
        
        const title = document.createElement('h1');
        title.className = 'text-neon-orange fs-fluid-1 mb-2 text-center';
        title.innerHTML = '<i class="bi bi-trophy-fill"></i> S√≠≈à sl√°vy';
        container.appendChild(title);
        
        const table = document.createElement('div');
        table.innerHTML = `
            <table class="table table-sm">
                <thead>
                    <tr><th class="text-neon-orange">Jm√©no</th><th class="text-neon-orange">Sk√≥re</th></tr>
                </thead>
                <tbody>
                    <tr><td class="text-neon-blue">Hr√°ƒç</td><td class="text-neon-green">12500</td></tr>
                    <tr><td class="text-neon-blue">Gemini</td><td class="text-neon-green">10800</td></tr>
                </tbody>
            </table>
        `;
        
        container.appendChild(table);
        
        const backBtn = createNeonButton('ZPƒöT', 'orange', 'bi-arrow-left', 
            () => gameState.updateState({ gamePhase: 'menu' }));
        container.appendChild(backBtn);
        
        if (gameArea) {
            gameArea.innerHTML = '';
            gameArea.appendChild(container);
        }
    }
}

export default GameScreens;
