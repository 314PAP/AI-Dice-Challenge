#!/bin/bash

# Skript pro vyƒçi≈°tƒõn√≠ duplicitn√≠ch z√°loh v projektu

# Barvy pro v√Ωstup
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üßπ ƒåist√≠m nepot≈ôebn√© z√°lohy a duplicity...${NC}"

# 1. Zkontrolujeme adres√°≈ô .backup/.history/AIDICE
BACKUP_DIR="../.backup/.history/AIDICE"
if [ -d "$BACKUP_DIR" ]; then
    echo -e "${BLUE}Nalezen adres√°≈ô se z√°lohami: $BACKUP_DIR${NC}"
    
    # Zjist√≠me poƒçet soubor≈Ø a slo≈æek v z√°lohovac√≠m adres√°≈ôi
    FILE_COUNT=$(find "$BACKUP_DIR" -type f | wc -l)
    DIR_COUNT=$(find "$BACKUP_DIR" -type d | wc -l)
    
    echo -e "Poƒçet soubor≈Ø: ${YELLOW}$FILE_COUNT${NC}"
    echo -e "Poƒçet adres√°≈ô≈Ø: ${YELLOW}$DIR_COUNT${NC}"
    
    # Zept√°me se, zda chcete odstranit duplicitn√≠ z√°lohy
    echo -e "${RED}‚ö†Ô∏è VAROV√ÅN√ç: Tato akce odstran√≠ duplicitn√≠ z√°lohy se stejn√Ωm obsahem${NC}"
    echo -e "Pokraƒçovat? (a/n)"
    read -r odpoved
    
    if [ "$odpoved" == "a" ] || [ "$odpoved" == "A" ]; then
        echo -e "${YELLOW}Odstra≈àuji duplicitn√≠ z√°lohy...${NC}"
        
        # Najdeme duplicity podle MD5 hashe
        find "$BACKUP_DIR" -type f -exec md5sum {} \; | sort | uniq -w32 --all-repeated=separate | cut -d' ' -f3 | xargs -r rm -v
        
        # Znovu spoƒç√≠t√°me poƒçet soubor≈Ø po odstranƒõn√≠ duplicit
        FILE_COUNT_AFTER=$(find "$BACKUP_DIR" -type f | wc -l)
        REMOVED_FILES=$((FILE_COUNT - FILE_COUNT_AFTER))
        
        echo -e "${GREEN}‚úÖ Odstranƒõn√≠ dokonƒçeno${NC}"
        echo -e "Odstranƒõno soubor≈Ø: ${RED}$REMOVED_FILES${NC}"
        echo -e "Z≈Østalo soubor≈Ø: ${GREEN}$FILE_COUNT_AFTER${NC}"
    else
        echo -e "${BLUE}Akce zru≈°ena${NC}"
    fi
else
    echo -e "${RED}‚ùå Adres√°≈ô se z√°lohami nenalezen: $BACKUP_DIR${NC}"
fi

# 2. Vyƒçist√≠me doƒçasn√© soubory VS Code
echo -e "\n${YELLOW}2. ƒåist√≠m doƒçasn√© soubory VS Code...${NC}"
VSCODE_CACHE_DIR="$HOME/.config/Code"
if [ -d "$VSCODE_CACHE_DIR" ]; then
    echo -e "${BLUE}Nalezen adres√°≈ô VS Code: $VSCODE_CACHE_DIR${NC}"
    echo -e "${RED}‚ö†Ô∏è VAROV√ÅN√ç: Tato akce vyma≈æe cache VS Code, co≈æ m≈Ø≈æe vy≈ôe≈°it probl√©m se sledov√°n√≠m soubor≈Ø${NC}"
    echo -e "Pokraƒçovat? (a/n)"
    read -r odpoved
    
    if [ "$odpoved" == "a" ] || [ "$odpoved" == "A" ]; then
        echo -e "${YELLOW}Odstra≈àuji VS Code cache...${NC}"
        
        # Zav≈ôeme VS Code, pokud bƒõ≈æ√≠
        pkill -f "code" 2>/dev/null
        sleep 1
        
        # Odstran√≠me cache soubory
        rm -rf "$VSCODE_CACHE_DIR/Cache" "$VSCODE_CACHE_DIR/CachedData" "$VSCODE_CACHE_DIR/CachedExtensions" "$VSCODE_CACHE_DIR/Code Cache" 2>/dev/null
        rm -rf "$VSCODE_CACHE_DIR/User/workspaceStorage/*/state.vscdb" 2>/dev/null
        
        echo -e "${GREEN}‚úÖ VS Code cache byl vyƒçi≈°tƒõn${NC}"
        echo -e "${BLUE}Nyn√≠ m≈Ø≈æete restartovat VS Code${NC}"
    else
        echo -e "${BLUE}Akce zru≈°ena${NC}"
    fi
else
    echo -e "${RED}‚ùå Adres√°≈ô VS Code nenalezen: $VSCODE_CACHE_DIR${NC}"
fi

echo -e "\n${GREEN}==============================================${NC}"
echo -e "${GREEN}       ƒåI≈†TƒöN√ç DOKONƒåENO       ${NC}"
echo -e "${GREEN}==============================================${NC}"
