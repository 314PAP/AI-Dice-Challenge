#!/bin/bash

# Skript pro komplexn√≠ vy≈ôe≈°en√≠ probl√©m≈Ø s VS Code sledov√°n√≠m soubor≈Ø
# Tento skript prov√°d√≠ n√°sleduj√≠c√≠:
# 1. Commituje v≈°echny zmƒõny
# 2. Vyƒçist√≠ VS Code cache
# 3. Resetuje sledov√°n√≠ soubor≈Ø
# 4. Aktualizuje .gitignore

# Barvy pro lep≈°√≠ ƒçitelnost
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${YELLOW}=== KOMPLEXN√ç ≈òE≈†EN√ç PROBL√âM≈Æ S VS CODE SLEDOV√ÅN√çM ===${NC}"

# 1. Ulo≈æ√≠me v≈°echny zmƒõny v Gitu
echo -e "\n${YELLOW}1. Ukl√°d√°m aktu√°ln√≠ zmƒõny do Gitu...${NC}"
git add .
git commit -m "üîÑ Hromadn√Ω commit pro vy≈ôe≈°en√≠ probl√©m≈Ø se sledov√°n√≠m soubor≈Ø"
git push

# 2. Vytvo≈ô√≠me seznam adres√°≈ô≈Ø a soubor≈Ø, kter√© VS Code sleduje, ale nem√° sledovat
echo -e "\n${YELLOW}2. Kontroluji a upravuji .gitignore...${NC}"
cat > .gitignore << EOL
# IDE a syst√©mov√© soubory
.vscode/*
!.vscode/settings.json
!.vscode/extensions.json
.idea/
*.iml
*.swp
.DS_Store
Thumbs.db

# Build a z√°vislosti
node_modules/
dist/
build/
coverage/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Z√°lohy a historie
.backup/
.history/
archive/
src/styles/archive/
dokumentybtrap/

# Ostatn√≠
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
EOL

echo -e "${GREEN}‚úÖ .gitignore byl aktualizov√°n${NC}"

# 3. Resetujeme sledov√°n√≠ soubor≈Ø
echo -e "\n${YELLOW}3. Resetuji sledov√°n√≠ soubor≈Ø v Git...${NC}"
git rm -r --cached .
git add .
git commit -m "üîÑ Resetov√°no sledov√°n√≠ soubor≈Ø podle .gitignore"
git push

# 4. Vyƒçist√≠me cache VS Code
echo -e "\n${YELLOW}4. Vyƒçist√≠me cache VS Code...${NC}"
echo -e "${RED}‚ö†Ô∏è  POZOR: Tato akce zav≈ôe VS Code!${NC}"
echo -e "${YELLOW}Je VS Code otev≈ôen√©? Zav≈ôete ho ruƒçnƒõ a pak zadejte 'a' pro pokraƒçov√°n√≠...${NC}"
echo -e "${YELLOW}Nebo zadejte 'n' pro p≈ôeskoƒçen√≠ tohoto kroku${NC}"
read -p "Pokraƒçovat s ƒçi≈°tƒõn√≠m cache? (a/n): " odpoved

if [[ "$odpoved" == "a" || "$odpoved" == "A" ]]; then
    echo -e "${YELLOW}Pokou≈°√≠m se zav≈ô√≠t VS Code...${NC}"
    
    # Bezpeƒçnƒõj≈°√≠ zp≈Øsob ukonƒçen√≠ VS Code
    killall code 2>/dev/null || pkill -f "code" 2>/dev/null || echo "VS Code nen√≠ spu≈°tƒõn"
    sleep 3
    
    echo -e "${YELLOW}Ma≈æu cache VS Code...${NC}"
    
    # Z√≠sk√°me cestu k VS Code cache
    VSCODE_CACHE_DIR="$HOME/.config/Code"
    
    if [ -d "$VSCODE_CACHE_DIR" ]; then
        # Vytvo≈ô√≠me z√°lohu workspaceStorage pro jistotu
        mkdir -p ~/.vscode-backup
        cp -r "$VSCODE_CACHE_DIR/User/workspaceStorage" ~/.vscode-backup/ 2>/dev/null
        
        # Sma≈æeme cache soubory - pou≈æ√≠v√°me m√©nƒõ destruktivn√≠ p≈ô√≠stup
        find "$VSCODE_CACHE_DIR/Cache" -type f -delete 2>/dev/null
        find "$VSCODE_CACHE_DIR/CachedData" -type f -delete 2>/dev/null
        find "$VSCODE_CACHE_DIR/CachedExtensions" -type f -delete 2>/dev/null
        find "$VSCODE_CACHE_DIR/Code Cache" -type f -delete 2>/dev/null
        find "$VSCODE_CACHE_DIR/User/workspaceStorage" -name "state.vscdb" -delete 2>/dev/null
        
        echo -e "${GREEN}‚úÖ Cache VS Code byl vyƒçi≈°tƒõn${NC}"
        echo -e "${BLUE}Pozn√°mka: Z√°loha VS Code dat byla vytvo≈ôena v ~/.vscode-backup${NC}"
    else
        echo -e "${RED}Adres√°≈ô VS Code cache nebyl nalezen v $VSCODE_CACHE_DIR${NC}"
        echo -e "${BLUE}Pokud pou≈æ√≠v√°te jinou verzi VS Code (nap≈ô. VS Code Insiders),${NC}"
        echo -e "${BLUE}upravte ruƒçnƒõ cestu v tomto skriptu.${NC}"
    fi
else
    echo -e "${BLUE}ƒåi≈°tƒõn√≠ cache bylo p≈ôeskoƒçeno.${NC}"
    echo -e "${YELLOW}M√≠sto toho zkusme jednodu≈°≈°√≠ metodu - reset sledov√°n√≠ Git soubor≈Ø...${NC}"
fi

echo -e "${GREEN}‚úÖ Cache VS Code byl vyƒçi≈°tƒõn${NC}"

echo -e "\n${GREEN}==============================================${NC}"
echo -e "${GREEN}       KOMPLEXN√ç ≈òE≈†EN√ç DOKONƒåENO       ${NC}"
echo -e "${GREEN}==============================================${NC}"
echo -e "Co dƒõlat d√°l:"
echo -e "1. ${BLUE}Znovu otev≈ôete VS Code${NC}"
echo -e "2. ${BLUE}Zkontrolujte, zda probl√©m byl vy≈ôe≈°en${NC}"
echo -e "3. ${BLUE}Pro GitKraken: Pokud nechcete roz≈°√≠≈ôen√≠ instalovat, kliknƒõte na 'Nikdy'${NC}"
echo -e "4. ${BLUE}Pokud st√°le vid√≠te mnoho zmƒõnƒõn√Ωch soubor≈Ø, spus≈•te tento skript znovu${NC}"
echo -e "${GREEN}==============================================${NC}"
